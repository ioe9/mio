<?php $myBlock = $this->getLayout()->getBlock('templateGrid'); ?>
<script type="text/javascript">

<?php if( is_object($myBlock) && $myBlock->getJsObjectName() ): ?>
    var checkBoxes = $H(<?php echo $myBlock->_getSelectedTemplate(true) ?>);
    
    var warning = false;
    if (checkBoxes.size() > 0) {
        warning = true;
    }
    $('incategory').value = checkBoxes.toQueryString();

    function registerTemplate(grid, element, checked)
    {
        if (checked) {
            checkBoxes.set(element.value, 0);
        } else {
            checkBoxes.unset(element.value);
        }
        $('incategory').value = checkBoxes.toQueryString();
        grid.reloadParams = {'incategory[]':checkBoxes.keys()};
    }

    function templateRowClick(grid, event)
    {
        var trElement = Event.findElement(event, 'tr');
        var isInput   = Event.element(event).tagName == 'INPUT';
        if (trElement) {
            var checkbox = Element.getElementsBySelector(trElement, 'input');
            if(checkbox[0]){
                var checked = isInput ? !checkbox[0].checked : checkbox[0].checked;
                //console.log(checkbox[0].value);
                if (checked) {
                    if ( confirm("<?php echo $this->__('警告：您确认要把这个模版移出当前分类吗？') ?>") ) {
                        checkbox[0].checked = false;
                        checkBoxes.unset(checkbox[0].value);
                        varienElementMethods.setHasChanges(checkbox[0]);
                    } else {
                        checkbox[0].checked = true;
                    }
                } else {
                    checkbox[0].checked = true;
                    checkBoxes.set(checkbox[0].value, true);
                }
				
                $('incategory').value = checkBoxes.toQueryString();
                grid.reloadParams = {'incategory[]':checkBoxes.keys()};
            }
        }
    }
	//初始化已选中的
    function templateRowInit(grid, row)
    {
        var checkbox = $(row).getElementsByClassName('checkbox')[0];
        if (checkbox) {
            if (checkbox.checked) {
                checkBoxes.set(checkbox.value, checkbox.checked);
            } else {
                checkBoxes.unset(checkbox.value);
            }

            $('incategory').value = checkBoxes.toQueryString();
            grid.reloadParams = {'incategory[]':checkBoxes.keys()};
        }
    }

    function massSelectTemplates(allCheckbox)
    {
        if (!allCheckbox.checked && checkBoxes.size() > 0) {
            if (!confirm("<?php echo $this->__('警告：您确认要把这些模版移出当前分类吗？') ?>") ) {
                allCheckbox.checked = false;
                return false;
            }
        }
        <?php echo $myBlock->getJsObjectName() ?>.rows.each(function(row)
        {
        	if (true) {
        		//console.log($(row).getElementsByClassName('checkbox'));
        		 $(row).getElementsByClassName('checkbox')[0].checked = allCheckbox.checked;
        	}
           
            templateRowInit(<?php echo $myBlock->getJsObjectName() ?>, row);
        });
    }

<?php echo $myBlock->getJsObjectName() ?>.rowClickCallback = templateRowClick;
<?php echo $myBlock->getJsObjectName() ?>.initRowCallback = templateRowInit;
<?php echo $myBlock->getJsObjectName() ?>.checkboxCheckCallback = registerTemplate;
<?php echo $myBlock->getJsObjectName() ?>.checkCheckboxes = massSelectTemplates;
<?php echo $myBlock->getJsObjectName() ?>.rows.each(function(row){templateRowInit(<?php echo $myBlock->getJsObjectName() ?>, row)});
    $('incategory_old').value = $('incategory').value;
<?php endif; ?>
</script>
